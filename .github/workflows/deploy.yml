# ==============================================
# ðŸš€ GitHub Actions CI/CD Workflow for Node.js App
# ----------------------------------------------
# This workflow:
# - Runs on push to dev, test, or pro branches
# - Builds a Docker image for each environment
# - Tags the image with the branch name
# - Pushes it to Docker Hub
# - SSHes into an EC2 instance
# - Pulls and runs the Docker container
# ----------------------------------------------
# Best Practices Used:
# âœ… Dockerized Deployment
# âœ… Secure Secrets via GitHub Actions
# âœ… Multi-branch Environment Isolation
# âœ… Idempotent Remote Docker Deployment
# âœ… Dynamic Docker Image Tagging
# ==============================================

name: Build and Deploy Node App with Docker (Same Credentials)

on:
  push:
    branches:
      - dev
      - test
      - pro

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get Branch Name
      id: vars
      run: |
        BRANCH_NAME="${GITHUB_REF##*/}"
        echo "env=${BRANCH_NAME}" >> $GITHUB_OUTPUT

    - name: Log in to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker Image
      run: |
        TAG=${{ steps.vars.outputs.env }}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/node-app:${TAG} .

    - name: Push Docker Image to Docker Hub
      run: |
        TAG=${{ steps.vars.outputs.env }}
        docker push ${{ secrets.DOCKER_USERNAME }}/node-app:${TAG}

    - name: SSH and Deploy to EC2
      run: |
        TAG=${{ steps.vars.outputs.env }}
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

        ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/node-app:${TAG}
          sudo docker stop node-app || true
          sudo docker rm node-app || true
          sudo docker run -d --name node-app -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/node-app:${TAG}
        EOF
